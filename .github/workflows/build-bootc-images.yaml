name: Build bootable container image
on:
  schedule:
    - cron: '0 3 * * 0' # Runs at 03:00, only on Sunday for security patching
  workflow_dispatch:
  pull_request:
    branches: 
      - main
  push:
#    paths:
#      - "Containerfile"
#      - "config.toml"
#      - ".github/workflows/build-bootc-images.yaml"
    branches:
      - main
    paths-ignore:
      - README.md
      - .editorconfig
      - .gitignore
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  IMAGE_DESC: "${{ github.event.repository.description }}"
  #IMAGE_LOGO_URL: "https://raw.githubusercontent.com/astrovm/amyos/main/repo_files/amy-logo-white.png" # Put your own image here for a fancy profile on https://artifacthub.io/!
  #IMAGE_NAME: "${{ github.event.repository.name }}" # output image name, usually same as repo name
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}" # do not edit
  DEFAULT_TAG: "latest"

jobs:
  build-bootc-image:
    name: Build bootable container image
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      fail-fast: true
      matrix:
        image:
          - IMAGE_NAME: homeserver-centos-bootc
            CONTEXT: ./
    continue-on-error: false
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Clone the repository
        uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Load image
      #  shell: bash
      #  run: |
      #    podman pull ghcr.io/${{ github.repository }}/${{ matrix.image.IMAGE_NAME }}:latest

      - name: Get current date
        id: date
        run: |
          # This generates a timestamp like what is defined on the ArtifactHub documentation
          # E.G: 2022-02-08T15:38:15Z'
          # https://artifacthub.io/docs/topics/repositories/container-images/
          # https://linux.die.net/man/1/date
          echo "date=$(date -u +%Y\-%m\-%d\T%H\:%M\:%S\Z)" >> $GITHUB_OUTPUT

      - name: Image Metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        id: metadata
        with:
          # This generates all the tags for your image, you can add custom tags here too!
          # Default tags are "$DEFAULT_TAG" and "$DEFAULT_TAG.$date".
          tags: |
            type=raw,value=${{ env.DEFAULT_TAG }}
            type=raw,value=0.1.${{ github.run_number }}
            type=raw,value=${{ env.DEFAULT_TAG }}.{{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: |
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.documentation=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ matrix.image.IMAGE_NAME }}/refs/heads/main/README.md
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ matrix.image.IMAGE_NAME }}/blob/main/Containerfile
            org.opencontainers.image.title=${{ matrix.image.IMAGE_NAME }}
            org.opencontainers.image.url=https://github.com/${{ github.repository_owner }}/${{ matrix.image.IMAGE_NAME }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=${{ env.DEFAULT_TAG }}.{{date 'YYYYMMDD'}}
            containers.bootc=1
          sep-tags: " "
          sep-annotations: " "

      - name: Use buildah build to create the image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          context: ${{ matrix.image.CONTEXT }}
          image: ${{ matrix.image.IMAGE_NAME }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          layers: true
          oci: false
          build-args: |
            REGISTRY_USERNAME="cthtrifork"
            REGISTRY_TOKEN=${{ secrets.PAT_PULL }}
            REGISTRY_URL=ghcr.io
            PINGGY_TOKEN=${{ secrets.PINGGY_TOKEN }}
          containerfiles: |
            ${{ matrix.image.CONTEXT }}/Containerfile

      - name: Push to Container registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository }}

      - name: Print image url

        run: echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"




