name: Create homeserver bootable container image

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: 'Type of image to build.'
        options:
          - iso
          - raw
          - qcow2
          - vmdk
          - vdh
        required: false
        default: 'iso'
      image_name:
        description: "Image name to build"
        type: choice
        required: true
        options:
          - homeserver-centos-bootc
          - github-runner-centos-bootc
          - homeserver-gui-bootc
          - jumphost-centos-bootc
        default: homeserver-centos-bootc
      context:
        description: "Build context (path)"
        type: string
        required: true
        default: "."
      tag:
        description: "Image tag"
        type: string
        required: true
        default: "latest"

jobs:
  create-image:
    name: Build ${{ inputs.type }} image
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      packages: write

    steps:
      - name: Clone the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create image
        id: create-image
        uses: ublue-os/bootc-image-builder-action@main
        with:
          config-file: ${{ inputs.context }}/config.toml
          type: ${{ inputs.type }}
          rootfs: xfs
          image: ghcr.io/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.tag }}
    
      - name: Rename output
        shell: bash
        run: |
          mv ${{ steps.create-image.outputs.output-path }} ${{ steps.create-image.outputs.output-directory }}/${{ inputs.image_name }}-${{ inputs.tag }}.${{ inputs.type }}

      - name: Install azcopy
        run: |
          mkdir -p $HOME/tools/azcopy
          wget -qO- https://aka.ms/downloadazcopy-v10-linux | tar -xz -C $HOME/tools/azcopy --strip-components=1
          echo "$HOME/tools/azcopy" >> $GITHUB_PATH
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Upload with access key
        env:
          AZCOPY_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZCOPY_ACCOUNT_NAME: krusobackup
          SOURCE_DIR: ${{ steps.create-image.outputs.output-directory }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTIONSTRING }}
        run: |
          az storage azcopy blob upload \
            -c homeserver --account-name $AZCOPY_ACCOUNT_NAME \
            -s "$SOURCE_DIR/*" \
            --recursive \
            --only-show-errors \
            --connection-string $AZURE_STORAGE_CONNECTION_STRING

