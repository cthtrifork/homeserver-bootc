#!/usr/bin/env bash
set -euo pipefail

# SCRIPT VERSION
GROUP_SETUP_VER=1
mkdir -p /etc/homeserver
GROUP_SETUP_VER_FILE="/etc/homeserver/dx-groups"
touch "$GROUP_SETUP_VER_FILE"
GROUP_SETUP_VER_RAN=$(cat "$GROUP_SETUP_VER_FILE")

# Setup Groups
wheelarray=($(getent group wheel | cut -d ":" -f 4 | tr ',' '\n'))

# Setup home directory for each user in wheel group
for user in $wheelarray; do
  echo "Setting up home for user: $user"
  
  # Ensure systemd-homed user exists, create if needed
  if ! homectl inspect "$user" >/dev/null 2>&1; then
    echo "User $user not found in systemd-homed, creating..."
    homectl create "$user" --identity=/usr/lib/userdb/$user.user || {
      echo "Failed to create user $user, skipping..."
      exit 1
      continue
    }
  fi

  # Activate the user to ensure home directory is available
  homectl activate "$user" || true
  
  # Wait for home directory to be available
  for i in {1..30}; do
    if [[ -d /home/$user ]]; then
      break
    fi
    echo "Waiting for /home/$user to be available... ($i/30)"
    sleep 1
  done
  
  if [[ ! -d /home/$user ]]; then
    echo "Error: /home/$user not available after activation, skipping user $user"
    continue
  fi

  install -o $user -g $user -m 0700 -d /home/$user/.docker
  install -o $user -g $user -m 0700 -d /home/$user/.config
  install -o $user -g $user -m 0700 -d /home/$user/.config/containers

  #ln -sf /etc/containers/auth.json /home/$user/.config/containers/auth.json
  #ln -sf /usr/lib/container-auth.json /home/$user/.docker/config.json

  install -o $user -g $user -m 0600 /etc/containers/auth.json /home/$user/.config/containers/auth.json # for podman
  install -o $user -g $user -m 0600 /usr/lib/container-auth.json /home/$user/.docker/config.json       # for docker CLI
  runuser -u "$user" -- /usr/libexec/setup-home.sh "$user"
done

# Run script if updated
if [[ ! -f $GROUP_SETUP_VER_FILE && "$GROUP_SETUP_VER" != "$GROUP_SETUP_VER_RAN" ]]; then
  for user in $wheelarray; do
    usermod -aG docker $user
    # todo: add more groups here
  done

  # Prevent future executions
  echo "Writing state file"
  echo "$GROUP_SETUP_VER" >"$GROUP_SETUP_VER_FILE"
fi